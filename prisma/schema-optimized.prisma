// Оптимизированная схема базы данных
generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Упрощенная модель поста
model Post {
  id          String   @id @default(cuid())
  description String
  latitude    Float
  longitude   Float
  address     String?
  timestamp   BigInt
  expiresAt   BigInt
  userId      String
  userName    String
  type        PostType
  severity    PostSeverity
  likes       Int      @default(0)
  photo       String?
  
  // Модерация
  isApproved  Boolean  @default(false)
  moderatedAt BigInt?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("posts")
  @@index([latitude, longitude])
  @@index([expiresAt])
  @@index([type, isApproved])
}

// Упрощенная модель пользователя
model User {
  id              String   @id @default(cuid())
  telegramId      String?  @unique
  name            String
  username        String?
  photoUrl        String?
  role            UserRole @default(USER)
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("users")
}

// Упрощенная модель комментария
model Comment {
  id        String   @id @default(cuid())
  content   String
  postId    String
  userId    String
  userName  String
  timestamp BigInt
  createdAt DateTime @default(now())

  @@map("comments")
  @@index([postId])
}

// Енумы
enum PostType {
  dps
  patrol
  accident
  camera
  roadwork
  animals
  other
}

enum PostSeverity {
  low
  medium
  high
}

enum UserRole {
  USER
  MODERATOR
  ADMIN
}
