/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è —Å–∏—Å—Ç–µ–º—ã
 */

import { PrismaClient } from '../lib/generated/prisma';

const prisma = new PrismaClient();

async function setupFounder() {
  try {
    console.log('üèóÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è —Å–∏—Å—Ç–µ–º—ã...');
    
    const founderTelegramId = '6014412239';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º Telegram ID
    let user = await prisma.user.findUnique({
      where: { telegramId: founderTelegramId }
    });
    
    if (!user) {
      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è
      user = await prisma.user.create({
        data: {
          telegramId: founderTelegramId,
          name: '–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º—ã',
          username: 'founder',
          role: 'FOUNDER',
          isMuted: false,
          isBanned: false,
          isKicked: false,
          locationPermission: true
        }
      });
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å:', user.id);
    } else {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      user = await prisma.user.update({
        where: { id: user.id },
        data: { role: 'FOUNDER' }
      });
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ FOUNDER:', user.id);
    }
    
    console.log('üëë –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω:');
    console.log(`   ID: ${user.id}`);
    console.log(`   Telegram ID: ${user.telegramId}`);
    console.log(`   –ò–º—è: ${user.name}`);
    console.log(`   –†–æ–ª—å: ${user.role}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const totalUsers = await prisma.user.count();
    const moderators = await prisma.user.count({ where: { role: 'MODERATOR' } });
    const admins = await prisma.user.count({ where: { role: 'ADMIN' } });
    const founders = await prisma.user.count({ where: { role: 'FOUNDER' } });
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    console.log(`   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}`);
    console.log(`   –û—Å–Ω–æ–≤–∞—Ç–µ–ª–µ–π: ${founders}`);
    console.log(`   –ê–¥–º–∏–Ω–æ–≤: ${admins}`);
    console.log(`   –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤: ${moderators}`);
    console.log(`   –û–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers - founders - admins - moderators}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
setupFounder();
