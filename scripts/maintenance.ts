#!/usr/bin/env bun

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Ä–æ–∂–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞
 */

import { SmallCityOptimizer } from '../lib/small-city-optimizer';
import { EnhancedAIModeration } from '../lib/enhanced-ai-moderation';

async function runMaintenance() {
  console.log('üîß –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã');
  console.log('===============================================');
  console.log(`‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\n`);

  try {
    // 1. –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
    const cleanupResult = await SmallCityOptimizer.cleanupForSmallCity();
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ: ${cleanupResult.expiredPosts} –ø–æ—Å—Ç–æ–≤, ${cleanupResult.expiredModeration} –º–æ–¥–µ—Ä–∞—Ü–∏–π, ${cleanupResult.expiredStats} —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫`);

    // 2. –ò–ò-–º–æ–¥–µ—Ä–∞—Ü–∏—è –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤
    console.log('\nü§ñ –ò–ò-–º–æ–¥–µ—Ä–∞—Ü–∏—è –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤...');
    await EnhancedAIModeration.moderatePendingPosts();
    console.log('   ‚úÖ –ò–ò-–º–æ–¥–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

    // 3. –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤
    console.log('\nüîó –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤...');
    const clusters = await SmallCityOptimizer.clusterPostsForSmallCity();
    console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω–æ ${clusters.length} –∫–ª–∞—Å—Ç–µ—Ä–æ–≤`);

    // 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log('\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    const stats = await SmallCityOptimizer.getOptimizedStats();
    console.log(`   üìà –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: ${stats.total}`);
    console.log(`   üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.activeUsers}/${stats.maxUsers} (${stats.utilizationPercent}%)`);

    // 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:');
    const recommendations = SmallCityOptimizer.getOptimizationRecommendations();
    recommendations.recommendations.forEach(rec => {
      console.log(`   ‚Ä¢ ${rec}`);
    });

    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    console.log('\n‚ö° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:');
    console.log(`   üóÑÔ∏è –†–∞–∑–º–µ—Ä –∫—ç—à–∞: ${recommendations.cacheSize}/${recommendations.maxCacheSize}`);
    console.log(`   üèôÔ∏è –¢–∏–ø –≥–æ—Ä–æ–¥–∞: ${recommendations.cityType}`);

    console.log('\n‚úÖ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
if (require.main === module) {
  runMaintenance();
}

export { runMaintenance };
