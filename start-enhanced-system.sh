#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–æ—Ä–æ–∂–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π
# –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ (–ö–∏–Ω–≥–∏—Å–µ–ø–ø)

echo "üöó –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–æ—Ä–æ–∂–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π"
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ env.example –≤ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
    echo "cp env.example .env"
    echo "nano .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
if ! bunx prisma db push --accept-data-loss > /dev/null 2>&1; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ DATABASE_URL –≤ .env —Ñ–∞–π–ª–µ"
    exit 1
fi
echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç
echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞..."
bunx prisma generate

# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
bun run scripts/setup-enhanced-system.ts

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p logs uploads/posts cache

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤ —Ñ–æ–Ω–µ
echo "üîß –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è..."
bun run scripts/maintenance.ts &
MAINTENANCE_PID=$!

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
cleanup() {
    echo ""
    echo "üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã..."
    kill $MAINTENANCE_PID 2>/dev/null
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    exit 0
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

echo ""
echo "üéâ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–æ—Ä–æ–∂–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π –∑–∞–ø—É—â–µ–Ω–∞!"
echo ""
echo "üì± –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:"
echo "   ‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ò–ò-–º–æ–¥–µ—Ä–∞—Ü–∏—è —Å –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–º –∞–Ω–∞–ª–∏–∑–æ–º"
echo "   ‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞"
echo "   ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
echo "   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤"
echo "   ‚Ä¢ –£–º–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞–±–æ—Ç—ã"
echo ""
echo "ü§ñ –ò–ò-–º–æ–¥–µ—Ä–∞—Ü–∏—è:"
echo "   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç–∏"
echo "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–æ—Ä–æ–∂–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π"
echo "   ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏"
echo "   ‚Ä¢ Fallback —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏ —Å–±–æ—è—Ö"
echo ""
echo "üèôÔ∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞:"
echo "   ‚Ä¢ –ë—ã—Å—Ç—Ä–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ (1 –º–∏–Ω—É—Ç–∞)"
echo "   ‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–µ (30 –º–∞–∫—Å–∏–º—É–º)"
echo "   ‚Ä¢ –ß–∞—Å—Ç–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤)"
echo "   ‚Ä¢ –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –±–ª–∏–∑–∫–∏—Ö –ø–æ—Å—Ç–æ–≤ (200–º —Ä–∞–¥–∏—É—Å)"
echo ""
echo "üåê –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
echo "   –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: bun run dev"
echo "   –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞: bun run build && bun run start"
echo ""
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   ‚Ä¢ –õ–æ–≥–∏: tail -f logs/app.log"
echo "   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: bun run scripts/check-stats.ts"
echo "   ‚Ä¢ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ: bun run scripts/maintenance.ts"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if [ "$1" = "dev" ]; then
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    bun run dev
elif [ "$1" = "prod" ]; then
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ..."
    bun run build
    bun run start
else
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    echo "   –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $0 prod"
    bun run dev
fi
